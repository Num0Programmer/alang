data $argc_fmt = { b "\nNumber of arguments = %u\n", b 0 }
data $file_name_fmt = { b "File name = %s\n", b 0 }
data $file_size_fmt = { b "File size = %lu bytes\n", b 0 }
data $ch_fmt = { b "character = %c\n", b 0 }
data $file_contents_fmt = { b "File contents (# of bytes=%lu) = %s\n", b 0 }
data $err_open_file = { b "Error: could not open specified file!\n", b 0 }
data $read_mode = { b "r", b 0 }


function l $get_token(l %buffer, l %size, l %capacity, l %fh)
{
@start
    %len =l copy 0
@get_char
    %ch =w call $fgetc(l %fh)
    %cmp_res =w ceqw %ch, 32  # compare with ASCII value for space character
    jnz %cmp_res, @exit, @add_ch
@add_ch
    storeb %ch, %buffer
    %len =l add %len, 1
    %buffer =l add %buffer, 1
    jmp @get_char
@exit
    storeb 0, %buffer
    ret %len
}


function w $parse_file(l %fh) {
@start
    %contents =l alloc1 33
    %len =l call $get_token(l %contents, l 1, l 33, l %fh)
    call $printf(l $file_contents_fmt, ..., w %len, l %contents)
    %ch =w loadub %contents
    call $printf(l $ch_fmt, ..., w %ch)
@exit
    ret 0
}


export function w $main(l %argc, l %argv) {
@start
    call $printf(l $argc_fmt, ..., l %argc)
    %argv =l add %argv, 8
    %file_name =l loadl %argv
    call $printf(l $file_name_fmt, ..., l %file_name)
    %fh =l call $fopen(l %file_name, l $read_mode)
    jnz %fh, @fopen_success, @fopen_failure
@fopen_success
    call $parse_file(l %fh)
    call $fclose(l %fh)
    jmp @exit
@fopen_failure
    call $printf(l $err_open_file, ...)
@exit
    ret 0
}
